{"version":3,"sources":["components/Login.js","components/Dog.js","context/MatchContext.js","components/Logout.js","components/Search.js","components/Match.js","App.js","reportWebVitals.js","index.js"],"names":["Login","name","setName","useState","email","setEmail","navigate","useNavigate","React","createElement","className","onSubmit","async","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","credentials","ok","data","text","error","htmlFor","id","type","placeholder","value","onChange","target","required","Dog","_ref","dog","addFavorites","favorites","isFavorited","includes","src","img","alt","age","breed","zip_code","handleFavoriteClick","checked","MatchContext","createContext","Logout","onClick","Search","dogs","setDogs","filteredDogs","setFilteredDogs","breedFilter","setBreedFilter","sortBreed","setSortBreed","sortName","setSortName","nextUrl","setNextUrl","prevUrl","setPrevUrl","setFavorites","setMatch","useContext","fetchADog","dogIds","json","fetchDogs","url","arguments","length","undefined","apiUrl","concat","encodeURIComponent","Object","values","resultIds","flat","dogDetails","sortedDogs","applySorting","next","prev","useEffect","sort","a","b","localeCompare","dogId","prevFavorites","filter","favId","Fragment","selectedBreed","map","e","disabled","index","key","goToPrevPage","goToNextPage","Match","match","setDog","returnSearch","App","Provider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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oD,6BAElEF,IAAAC,cAAA,WACID,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOoB,QAAQ,cAAcnB,UAAU,yBAAwB,oBAC/DF,IAAAC,cAAA,UAAQqB,GAAG,cAAcG,MAAO4B,EAAa3B,SA7O7BtB,UAC5B,MAAM4F,EAAgB3F,EAAMsB,OAAOF,MACnC6B,EAAe0C,GAOXA,QACM3B,EAAU,KAAM2B,SAEhB3B,KAiOkFnE,UAAU,sCACtFF,IAAAC,cAAA,UAAQwB,MAAM,IAAG,cApItB,CACX,gBACA,eACA,sBACA,WACA,iCACA,cACA,qBACA,UACA,SACA,SACA,qBACA,uBACA,0BACA,mBACA,aACA,WACA,gBACA,iBACA,SACA,cACA,uBACA,QACA,oBACA,SACA,mBACA,eACA,QACA,WACA,2BACA,YACA,OACA,UACA,iBACA,SACA,yBACA,iBACA,QACA,QACA,WACA,mBACA,iBACA,mBACA,cACA,aACA,wBACA,iBACA,kBACA,8BACA,kBACA,mBACA,gBACA,aACA,iBACA,6BACA,cACA,eACA,eACA,gBACA,sBACA,kBACA,oBACA,mBACA,WACA,SACA,qBACA,WACA,SACA,qBACA,mBACA,WACA,QACA,WACA,WACA,cACA,mBACA,qBACA,mBACA,sBACA,eACA,kBACA,qBACA,kBACA,uBACA,aACA,WACA,WACA,WACA,aACA,MACA,UACA,sBACA,aACA,gBACA,SACA,UACA,aACA,iBACA,qBACA,mBACA,oBACA,WACA,iBACA,gBACA,8BACA,4BACA,kBACA,qBACA,iBACA,kBACA,kBACA,aACA,cACA,SACA,eACA,aACA,yBACA,8BACA,UACA,0BACA,qBAawBwE,IAAKzD,GACTxC,IAAAC,cAAA,UAAQwB,MAAOe,GAAQA,MAInCxC,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOoB,QAAQ,YAAYnB,UAAU,yBAAwB,kBAC7DF,IAAAC,cAAA,UAAQqB,GAAG,YAAYG,MAAO8B,EAAW7B,SAAUwE,GAAK1C,EAAa0C,EAAEvE,OAAOF,OAAQvB,UAAU,sCAC5FF,IAAAC,cAA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","file":"static/js/main.3769898c.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {useNavigate} from 'react-router-dom'\n\nexport default function Login() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const navigate = useNavigate();\n\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        console.log('attempting to log in');\n\n        // make a POST request to API endpoint \n        try {\n            const response = await fetch('https://frontend-take-home-service.fetch.com/auth/login', {\n                method: 'POST', \n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({name, email}),\n                credentials: 'include'\n            })    \n            if (response.ok) {\n                const data = await response.text();\n                console.log('Login successful', data);\n                navigate('/search') \n            } else {\n                console.log('Login failed')\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n    \n    return (\n        <div className=\"flex items-center justify-center h-screen bg-blue-50\">\n            <div className=\"w-full max-w-xs\">\n                <h1 className=\"text-2xl font-bold text-center text-blue-700 mb-8\">Adopt-a-Dog</h1>\n                <form onSubmit={handleLogin} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                            Name\n                        </label>\n                        <input \n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n                            id=\"name\" \n                            type=\"text\" \n                            placeholder=\"Name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            required \n                        />\n                    </div>\n                    <div className=\"mb-6\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                            Email\n                        </label>\n                        <input \n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \n                            id=\"email\" \n                            type=\"email\" \n                            placeholder=\"Email\"\n                            value={email}\n                            onChange={event => setEmail(event.target.value)}\n                            required \n                        />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                        <button \n                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" \n                            type=\"submit\">\n                            Login\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}","import React, {useEffect} from \"react\";\n\nconst Dog = ({ dog, addFavorites, favorites }) => {\n\n    const isFavorited = favorites.includes(dog.id);\n\n    const handleFavoriteClick = () => {\n        addFavorites(dog.id);\n    };\n\n    // useEffect(() => {\n    //     console.log(\"Updated favorites:\", favorites);\n    // }, [favorites]);\n    \n    \n    return (\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg m-4 hover:shadow-xl transition-shadow duration-300 bg-white\">\n            <img className=\"w-full object-cover\" src={dog.img} alt={dog.name} />\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-xl mb-2 text-blue-700\">{dog.name}</div>\n                <p className=\"text-gray-700 text-base\">\n                    Age: {dog.age}\n                </p>\n                <p className=\"text-gray-700 text-base\">\n                    Breed: {dog.breed}\n                </p>\n                <p className=\"text-gray-700 text-base\">\n                    Zip Code: {dog.zip_code}\n                </p>\n                <div className=\"mt-4\">\n                    <label className=\"inline-flex items-center\">\n                        <input \n                            className=\"form-checkbox h-5 w-5 text-blue-600\" \n                            onChange={handleFavoriteClick} \n                            checked={isFavorited} \n                            type=\"checkbox\"\n                        />\n                        <span className=\"ml-2 text-gray-700\">Add to Favorites</span>\n                    </label>\n                </div>\n            </div>\n        </div>\n    );\n    \n};\n\nexport default Dog;\n\n","import React, { createContext, useContext, useState } from 'react';\n\nexport const MatchContext = createContext();\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Logout = () => {\n    const navigate = useNavigate();\n\n    const handleLogout = async () => {\n        try {\n            const response = await fetch('https://frontend-take-home-service.fetch.com/auth/logout', {\n                method: 'POST',\n                credentials: 'include'\n            });\n            \n            if (response.ok) {\n                console.log('Logged out successfully');\n                navigate('/'); // Redirect to login page after logout\n            } else {\n                console.log('Logout failed');\n            }\n        } catch (error) {\n            console.error('There is an error with logging out:', error);\n        }\n    };\n\n    return (\n        <button onClick={handleLogout} className=\"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n            Log Out\n        </button>\n    )\n}\n\nexport default Logout;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Dog from \"./Dog\";\nimport { MatchContext } from \"../context/MatchContext\";\nimport Logout from \"./Logout\";\n// import TDog from \"./TDog\";\n\nexport default function Search() {\n    \n    const navigate = useNavigate();\n\n    // create local state variable for dogs\n    const [dogs, setDogs] = useState([]);\n\n    // array of dogs in local state\n    const [filteredDogs, setFilteredDogs] = useState([]);\n    // track state changes from user input of breed\n    const [breedFilter, setBreedFilter] = useState();\n\n    // handle sorting\n    const [sortBreed, setSortBreed] = useState('asc');\n    const [sortName, setSortName] = useState('asc');\n\n\n    // manage cursor for pagination\n    const [nextUrl, setNextUrl] = useState('');\n    const [prevUrl, setPrevUrl] = useState('');\n\n    // manage favorites by user\n    const [favorites, setFavorites] = useState([]);\n\n    // use context to set match\n    const { setMatch } = useContext(MatchContext);\n\n\n    // fetch details of each dog\n    const fetchADog = async (dogIds) => {\n        // check if dogIds is an array of the dog's ids\n        // console.log(`Dog IDs:`, dogIds);\n        try {\n            const response = await fetch('https://frontend-take-home-service.fetch.com/dogs', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                // dogIds is an array of all the Ids of dogs whose data we want to fetch\n                body: JSON.stringify(dogIds),\n                credentials: 'include'\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('Retrieved single dog data successfully');\n                // console.log(data);\n                return data;\n            } else {\n                console.log('Could not retrieve single dog data');\n            }\n        } catch (error) {\n            console.error('Error fetching dog details:', error);\n        }\n    };\n\n    // fetch dog ids\n    const fetchDogs = async (url, breed = null) => {\n        // console.log('Attempting to retrieve dogs');\n        \n        let apiUrl = url || `https://frontend-take-home-service.fetch.com/dogs/search?size=10&sort=breed:${sortBreed}`;\n\n        // add breed to query parameters\n        if (breed) apiUrl += `&breeds=${encodeURIComponent(breed)}`\n        \n        try {\n            const response = await fetch(apiUrl, {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('Retrieved dogs successfully:');\n                console.log(data);\n                \n                const dogIds = Object.values(data.resultIds).flat();\n                // make API call to fetchADog after we have created an array of ids\n                const dogDetails = await fetchADog(dogIds);\n\n                // sort dogs based on user preference\n                const sortedDogs = applySorting(dogDetails);\n                // Update the state with the dog details\n                setDogs(sortedDogs); \n                // setDogs(dogDetails); \n                // Initially all dogs are displayed\n                setFilteredDogs(sortedDogs);\n                // setFilteredDogs(dogDetails);\n\n                // Update next url\n                setNextUrl(data.next ? 'https://frontend-take-home-service.fetch.com' + data.next : null);\n                setPrevUrl(data.prev ? 'https://frontend-take-home-service.fetch.com' + data.prev : null);\n\n            } else {\n                console.log('Could not retrieve dogs');\n            }\n        } catch (error) {\n            console.error('Error fetching dogs:', error);\n        }\n    };\n\n    // run the useEffect once when the component mounts\n    useEffect(() => {\n        fetchDogs();\n        // getBreeds();\n    }, [sortBreed, sortName]);\n\n    useEffect(() => {\n        if (dogs.length > 0) {\n            const sortedDogs = applySorting(dogs);\n            setFilteredDogs(sortedDogs);\n        }\n    }, [sortBreed, sortName, dogs]);\n    \n\n    const handleBreedFilterChange = async (event) => {\n        const selectedBreed = event.target.value;\n        setBreedFilter(selectedBreed);\n\n        // Filter the dogs based on the selected breed. no longer need this because now we are making an api fetch for dogs after user changes breed filter\n        // const filtered = dogs.filter(dog => dog.breed === selectedBreed || selectedBreed === \"\");\n        // setFilteredDogs(filtered);\n\n        // call fetchDogs when breed is changed\n        if (selectedBreed) {\n            await fetchDogs(null, selectedBreed);\n        } else {\n            await fetchDogs();\n        }\n    };\n\n    // handle sorting\n    const applySorting = (dogs) => {\n        return dogs.sort((a, b) => {\n            if (sortBreed === 'asc') {\n                return a.breed.localeCompare(b.breed) || (sortName === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name));\n            } else {\n                return b.breed.localeCompare(a.breed) || (sortName === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name));\n            }\n        });\n    };\n    \n\n    // Pagination controls\n    const goToNextPage = () => {\n        // const cursor = nextUrl.split('&from=')[1];\n        // setCurrentCursor(url);\n        fetchDogs(nextUrl);\n    };\n    \n    const goToPrevPage = () => {\n        fetchDogs(prevUrl);\n    };\n\n    // add dogs to favorites\n    const addFavorites = (dogId) => {\n        setFavorites(prevFavorites => {\n            // Check if the dog is already in favorites\n            if (prevFavorites.includes(dogId)) {\n                // If so, remove it from array\n                return prevFavorites.filter(favId => favId !== dogId);\n            } else {\n                // Otherwise, add it to array\n                return [...prevFavorites, dogId];\n            }\n        })\n    }\n\n    // generate a match\n    const match = async () => {\n        if (favorites.length === 0) {\n            console.log('must add favorites to be matched');\n            return;\n        }\n        \n        try {\n            const response = await fetch('https://frontend-take-home-service.fetch.com/dogs/match', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(favorites),\n                credentials: 'include'\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setMatch(data);\n                console.log('Retrieved a successful match');\n                console.log(data);\n                navigate('/match');\n            } else {\n                console.log('Could not find a match');\n            }\n        } catch (error) {\n            console.error('Error finding a match:', error);\n        }\n    }\n    \n\n    // get all possible breeds\n    const getBreeds = async () => {\n        console.log('Attempting to get breeds');\n        try {\n            const response = await fetch('https://frontend-take-home-service.fetch.com/dogs/breeds', {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('Retrieved breeds successfully:');\n                console.log(data);\n                \n            } else {\n                console.log('Could not retrieve breeds');\n            }\n        } catch (error) {\n            console.error('Error getting breeds:', error);\n        }\n    };\n\n    const breeds = [\n        \"Affenpinscher\",\n        \"Afghan Hound\",\n        \"African Hunting Dog\",\n        \"Airedale\",\n        \"American Staffordshire Terrier\",\n        \"Appenzeller\",\n        \"Australian Terrier\",\n        \"Basenji\",\n        \"Basset\",\n        \"Beagle\",\n        \"Bedlington Terrier\",\n        \"Bernese Mountain Dog\",\n        \"Black-and-tan Coonhound\",\n        \"Blenheim Spaniel\",\n        \"Bloodhound\",\n        \"Bluetick\",\n        \"Border Collie\",\n        \"Border Terrier\",\n        \"Borzoi\",\n        \"Boston Bull\",\n        \"Bouvier Des Flandres\",\n        \"Boxer\",\n        \"Brabancon Griffon\",\n        \"Briard\",\n        \"Brittany Spaniel\",\n        \"Bull Mastiff\",\n        \"Cairn\",\n        \"Cardigan\",\n        \"Chesapeake Bay Retriever\",\n        \"Chihuahua\",\n        \"Chow\",\n        \"Clumber\",\n        \"Cocker Spaniel\",\n        \"Collie\",\n        \"Curly-coated Retriever\",\n        \"Dandie Dinmont\",\n        \"Dhole\",\n        \"Dingo\",\n        \"Doberman\",\n        \"English Foxhound\",\n        \"English Setter\",\n        \"English Springer\",\n        \"EntleBucher\",\n        \"Eskimo Dog\",\n        \"Flat-coated Retriever\",\n        \"French Bulldog\",\n        \"German Shepherd\",\n        \"German Short-haired Pointer\",\n        \"Giant Schnauzer\",\n        \"Golden Retriever\",\n        \"Gordon Setter\",\n        \"Great Dane\",\n        \"Great Pyrenees\",\n        \"Greater Swiss Mountain Dog\",\n        \"Groenendael\",\n        \"Ibizan Hound\",\n        \"Irish Setter\",\n        \"Irish Terrier\",\n        \"Irish Water Spaniel\",\n        \"Irish Wolfhound\",\n        \"Italian Greyhound\",\n        \"Japanese Spaniel\",\n        \"Keeshond\",\n        \"Kelpie\",\n        \"Kerry Blue Terrier\",\n        \"Komondor\",\n        \"Kuvasz\",\n        \"Labrador Retriever\",\n        \"Lakeland Terrier\",\n        \"Leonberg\",\n        \"Lhasa\",\n        \"Malamute\",\n        \"Malinois\",\n        \"Maltese Dog\",\n        \"Mexican Hairless\",\n        \"Miniature Pinscher\",\n        \"Miniature Poodle\",\n        \"Miniature Schnauzer\",\n        \"Newfoundland\",\n        \"Norfolk Terrier\",\n        \"Norwegian Elkhound\",\n        \"Norwich Terrier\",\n        \"Old English Sheepdog\",\n        \"Otterhound\",\n        \"Papillon\",\n        \"Pekinese\",\n        \"Pembroke\",\n        \"Pomeranian\",\n        \"Pug\",\n        \"Redbone\",\n        \"Rhodesian Ridgeback\",\n        \"Rottweiler\",\n        \"Saint Bernard\",\n        \"Saluki\",\n        \"Samoyed\",\n        \"Schipperke\",\n        \"Scotch Terrier\",\n        \"Scottish Deerhound\",\n        \"Sealyham Terrier\",\n        \"Shetland Sheepdog\",\n        \"Shih-Tzu\",\n        \"Siberian Husky\",\n        \"Silky Terrier\",\n        \"Soft-coated Wheaten Terrier\",\n        \"Staffordshire Bullterrier\",\n        \"Standard Poodle\",\n        \"Standard Schnauzer\",\n        \"Sussex Spaniel\",\n        \"Tibetan Mastiff\",\n        \"Tibetan Terrier\",\n        \"Toy Poodle\",\n        \"Toy Terrier\",\n        \"Vizsla\",\n        \"Walker Hound\",\n        \"Weimaraner\",\n        \"Welsh Springer Spaniel\",\n        \"West Highland White Terrier\",\n        \"Whippet\",\n        \"Wire-haired Fox Terrier\",\n        \"Yorkshire Terrier\"\n    ]\n\n\n    return (\n        <>\n            <h1 className=\"text-blue-500 text-3xl font-bold text-center my-6\">Search for your next dog!</h1>\n\n            <div>\n                <div>\n                    <label htmlFor=\"breedFilter\" className=\"ml-5 mr-2 font-medium\">Filter by Breed:</label>\n                    <select id=\"breedFilter\" value={breedFilter} onChange={handleBreedFilterChange} className=\"rounded border border-gray-300 p-2\">\n                        <option value=\"\">All Breeds</option>\n                        {breeds.map((breed) => (\n                            <option value={breed}>{breed}</option>\n                        ) )}\n                    </select>\n                </div>\n                <br></br>\n                <div>\n                    <label htmlFor=\"sortBreed\" className=\"ml-5 mr-2 font-medium\">Sort by Breed:</label>\n                    <select id=\"sortBreed\" value={sortBreed} onChange={e => setSortBreed(e.target.value)} className=\"rounded border border-gray-300 p-2\">\n                        <option value=\"asc\">Ascending</option>\n                        <option value=\"desc\">Descending</option>\n                    </select>\n                <br></br>\n                    <label htmlFor=\"sortName\" className=\"ml-5 mr-2 font-medium\">Sort by Name:</label>\n                    <select id=\"sortName\" value={sortName} onChange={e => setSortName(e.target.value)} className=\"rounded border border-gray-300 p-2\">\n                        <option value=\"asc\">Ascending</option>\n                        <option value=\"desc\">Descending</option>\n                    </select>\n                </div>\n            </div>\n            \n\n\n            <div className=\"text-center\">\n                Match me with a dog based on my favorites: <button onClick={match} disabled={favorites.length === 0 ? true : false} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:bg-gray-200 disabled:text-gray-500\">Generate a Match</button>\n            </div>\n\n            <div className=\"flex justify-center gap-2\">\n               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {filteredDogs.map((dog, index) => (\n                        <Dog key={index} dog={dog} addFavorites={addFavorites} favorites={favorites}/>\n                        //  <TDog key={index} dog={dog}/>\n                    ))}\n                </div> \n            </div>\n            \n\n            <div id=\"pagination\" className=\"flex justify-center items-center gap-4 my-4\">\n                <button onClick={goToPrevPage} disabled={!prevUrl} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:bg-gray-200 disabled:text-gray-500\">Previous</button>\n                <button onClick={goToNextPage} disabled={!nextUrl} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:bg-gray-200 disabled:text-gray-500\">Next</button>\n            </div>\n\n            <div>\n                <Logout />\n            </div>\n        </>\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { MatchContext } from \"../context/MatchContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport Logout from \"./Logout\";\n\nconst Match = () => {\n    \n    const { match } = useContext(MatchContext);\n    // console.log(match);\n\n    const [dog, setDog] = useState();\n    const navigate = useNavigate();\n\n    // fetch details for matched dog\n    const fetchADog = async () => {\n        try {\n            const response = await fetch('https://frontend-take-home-service.fetch.com/dogs', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify([match.match]),\n                credentials: 'include'\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('Retrieved single dog data successfully');\n                console.log(data);\n                console.log(data[0]);\n                setDog(data[0]);\n            } else {\n                console.log('Could not retrieve single dog data');\n            }\n        } catch (error) {\n            console.error('Error fetching dog details:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (match && match.match) {\n           fetchADog(); \n        }\n        \n    }, [match]);\n\n    // return to search page\n    const returnSearch = () => {\n        navigate('/search');\n    }\n    \n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-blue-50 p-6\">\n            {dog ? (\n                <div>\n                    <h1 className=\"text-3xl font-bold text-blue-700 mb-6\">You matched with {dog.name}!</h1>\n                    <div className=\"max-w-md rounded overflow-hidden shadow-lg bg-white p-6\">\n                        <img className=\"w-full h-48 object-cover object-center mb-4\" src={dog.img} alt={dog.name} />\n                        {/* <p className=\"text-xl font-medium text-800\">Name: {dog.name}</p> */}\n                        <p className=\"text-md text-700\">Breed: {dog.breed}</p>\n                        <p className=\"text-md text-700\">Age: {dog.age}</p>\n                        <p className=\"text-md text-700 mb-4\">Zip Code: {dog.zip_code}</p>\n                    </div>\n                </div>\n            ) : (\n                <p className=\"text-lg text-700\">Loading your match...</p>\n            )}\n    \n            <button onClick={returnSearch} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-6\">\n                Return to Search\n            </button>\n            <br></br>\n            <Logout />\n        </div>\n    );\n    \n  };\n  \n  export default Match;","import React, {useState} from 'react';\nimport './App.css';\n// @ts-ignore\nimport Login from './components/Login';\n// @ts-ignore\nimport Search from './components/Search';\nimport Match from './components/Match';\nimport { MatchContext } from './context/MatchContext';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n\nfunction App() {\n  \n  const [match, setMatch] = useState(null);\n  \n  return (\n    <MatchContext.Provider value={{match, setMatch}}>\n      <Router>\n      <Routes>\n        <Route path='/' element={<Login />} />\n        <Route path='/search' element={<Search />} />\n        <Route path='/match' element={<Match />} />\n\n      </Routes>\n      </Router>\n    </MatchContext.Provider>\n    \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './dist/output.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}